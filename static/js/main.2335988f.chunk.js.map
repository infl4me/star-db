{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/random-planet/index.js","components/random-planet/random-planet.js","components/row/index.js","components/row/row.js","components/hoc-helpers/with-handlers.js","components/item-list/index.js","components/item-list/item-list.js","components/item-details/item-details.js","components/item-details/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","react_default","a","createElement","className","href","_apiBase","_imgBase","getResource","_callee","url","res","regenerator_default","wrap","_context","prev","next","axios","get","concat","_this","sent","abrupt","data","stop","getPlanet","_callee2","id","_context2","_parsePlanet","getPerson","_callee3","_context3","_parsePerson","getStarship","_callee4","_context4","_parseStarship","getAllPeople","_callee5","_ref6","results","_context5","map","getAllStarships","_callee6","_ref8","_context6","getAllPlanets","_callee7","_ref10","_context7","getPersonImg","getStarshipImg","getPlanetImg","_extractId","_ref11","match","planet","name","population","rotationPeriod","rotation_period","diameter","starship","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","person","gender","birthYear","birth_year","eyeColor","eye_color","Spinner","RandomPlanet","swapiService","SwapiService","state","loading","imageUrl","getRandomInt","min","max","Math","floor","random","this","updatePlanet","_this2","_this$swapiService","then","setState","_this$state","_this$state$planet","Fragment","src","alt","components_spinner","renderPlanet","React","Component","Row","_ref","left","right","with_handlers","getData","_React$Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","inherits","createClass","key","value","updateData","prevProps","selectedId","props","assign","ItemList","withHandlers","onSelected","items","item","type","onClick","ItemDetails","_ref2","App","components_header","components_random_planet","components_row","components_item_list","components_item_details","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.2335988f.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport './header.css';\n\nconst Header = () => (\n  <header className=\"header box\">\n    <h1 className=\"header__title\">StarDB</h1>\n    <ul className=\"header__list\">\n      <li className=\"header__list-item\">\n        <a className=\"header__link\" href=\"http://\">People</a>\n      </li>\n      <li className=\"header__list-item\">\n        <a className=\"header__link\" href=\"http://\">Planets</a>\n      </li>\n      <li className=\"header__list-item\">\n        <a className=\"header__link\" href=\"http://\">Starships</a>\n      </li>\n    </ul>\n  </header>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nexport default class {\n  _apiBase = 'https://swapi.co/api/';\n\n  _imgBase = 'https://starwars-visualguide.com/assets/img/';\n\n  getResource = async (url) => {\n    const res = await axios.get(`${this._apiBase}${url}`);\n    return res.data;\n  }\n\n  getPlanet = async (id) => {\n    const data = await this.getResource(`planets/${id}/`);\n    return this._parsePlanet(data);\n  }\n\n  getPerson = async (id) => {\n    const data = await this.getResource(`people/${id}/`);\n    return this._parsePerson(data);\n  }\n\n  getStarship = async (id) => {\n    const data = await this.getResource(`starships/${id}/`);\n    return this._parseStarship(data);\n  }\n\n  getAllPeople = async () => {\n    const { results } = await this.getResource('people');\n    return results.map(this._parsePerson);\n  };\n\n  getAllStarships = async () => {\n    const { results } = await this.getResource('starships');\n    return results.map(this._parseStarship);\n  };\n\n  getAllPlanets = async () => {\n    const { results } = await this.getResource('planets');\n    return results.map(this._parsePlanet);\n  };\n\n  getPersonImg = id => `${this._imgBase}characters/${id}.jpg`;\n\n  getStarshipImg = id => `${this._imgBase}starships/${id}.jpg`;\n\n  getPlanetImg = id => `${this._imgBase}planets/${id}.jpg`;\n\n\n  _extractId = ({ url }) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return url.match(idRegExp)[1];\n  }\n\n  _parsePlanet = planet => ({\n    id: this._extractId(planet),\n    name: planet.name,\n    population: planet.population,\n    rotationPeriod: planet.rotation_period,\n    diameter: planet.diameter,\n  })\n\n  _parseStarship = starship => ({\n    id: this._extractId(starship),\n    name: starship.name,\n    model: starship.model,\n    manufacturer: starship.manufacturer,\n    costInCredits: starship.cost_in_credits,\n    length: starship.length,\n    crew: starship.crew,\n    passengers: starship.passengers,\n    cargoCapacity: starship.cargo_capacity,\n  })\n\n  _parsePerson = person => ({\n    id: this._extractId(person),\n    name: person.name,\n    gender: person.gender,\n    birthYear: person.birth_year,\n    eyeColor: person.eye_color,\n  })\n}\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => (\n  <div className=\"lds-css spinner ng-scope\">\n    <div className=\"lds-rolling\">\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","import RandomPlanet from './random-planet';\n\nexport default RandomPlanet;\n","import React from 'react';\nimport './random-planet.css';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner';\n\nexport default class RandomPlanet extends React.Component {\n  swapiService = new SwapiService();\n\n  state = {\n    loading: true,\n    planet: null,\n    imageUrl: null,\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n  }\n\n  getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n  updatePlanet() {\n    const id = this.getRandomInt(2, 19);\n    const { getPlanet, getPlanetImg } = this.swapiService;\n    getPlanet(id)\n      .then((planet) => {\n        const imageUrl = getPlanetImg(id);\n        this.setState({ planet, imageUrl, loading: false });\n      });\n  }\n\n\n  renderPlanet() {\n    const {\n      imageUrl,\n      planet: {\n        name, population, rotationPeriod, diameter,\n      },\n    } = this.state;\n    return (\n      <React.Fragment>\n        <img src={imageUrl} alt=\"planet\" className=\"random-planet__img\" />\n        <div className=\"random-planet__descr\">\n          <h2 className=\"random-planet__title\">{name}</h2>\n          <ul className=\"random-planet__list\">\n            <li className=\"random-planet__list-item\">{`Population ${population}`}</li>\n            <li className=\"random-planet__list-item\">{`Rotation period ${rotationPeriod}`}</li>\n            <li className=\"random-planet__list-item\">{`Diameter ${diameter}`}</li>\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"random-planet box\">\n        {loading && <Spinner />}\n        {loading || this.renderPlanet()}\n      </div>\n    );\n  }\n}\n","import Row from './row';\n\nexport default Row;\n","import React from 'react';\nimport './row.css';\n\nconst Row = ({ left, right }) => (\n  <div className=\"row\">\n    <div className=\"row__left\">{left}</div>\n    <div className=\"row__right\">{right}</div>\n  </div>\n);\n\nexport default Row;\n","import React from 'react';\nimport Spinner from '../spinner';\n\nexport default (Component, getData) => (\n  class extends React.Component {\n    state = {\n      loading: true,\n      error: false,\n      data: null,\n    }\n\n    componentDidMount() {\n      this.updateData();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.selectedId !== this.props.selectedId) {\n        this.updateData();\n      }\n    }\n\n    updateData() {\n      this.setState({ loading: true });\n      const { selectedId } = this.props;\n      getData(selectedId)\n        .then((data) => {\n          this.setState({ data, loading: false });\n        });\n    }\n\n    render() {\n      const { loading, error, data } = this.state;\n      if (loading) {\n        return <Spinner />;\n      }\n      if (error) {\n        return <div>error</div>;\n      }\n      return <Component {...this.props} data={data} />;\n    }\n  }\n);\n","import ItemList from './item-list';\n\nexport default ItemList;\n","import React from 'react';\nimport { withHandlers } from '../hoc-helpers';\nimport SwapiService from '../../services/swapi-service';\nimport './item-list.css';\n\nconst ItemList = ({ data, onSelected }) => {\n  const items = data.map((item) => {\n    const { name, id } = item;\n    return (\n      <li key={id} className=\"item-list__item\">\n        <button\n          type=\"button\"\n          onClick={() => onSelected(id)}\n          className=\"item-list__btn btn\"\n        >\n          {name}\n        </button>\n      </li>\n    );\n  });\n  return (\n    <ul className=\"item-list box\">\n      {items}\n    </ul>\n  );\n};\n\nconst { getAllPeople } = new SwapiService();\n\nexport default withHandlers(ItemList, getAllPeople);\n","import React from 'react';\nimport { withHandlers } from '../hoc-helpers';\nimport SwapiService from '../../services/swapi-service';\nimport './item-details.css';\n\nconst { getPerson, getPersonImg } = new SwapiService();\n\nconst ItemDetails = ({ data }) => {\n  const {\n    name, gender, birthYear, eyeColor, id,\n  } = data;\n  return (\n    <div className=\"item-details\">\n      <img className=\"item-details__img\" src={getPersonImg(id)} alt=\"person\" />\n      <div className=\"item-details__block\">\n        <h2 className=\"item-details__title\">{name}</h2>\n        <ul className=\"item-details__list\">\n          <li className=\"item-details__list-item\">{`Gender ${gender}`}</li>\n          <li className=\"item-details__list-item\">{`Birth year ${birthYear}`}</li>\n          <li className=\"item-details__list-item\">{`Eye color ${eyeColor}`}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default withHandlers(ItemDetails, getPerson);\n","import ItemDetails from './item-details';\n\nexport default ItemDetails;\n","import App from './app';\n\nexport default App;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport Row from '../row';\nimport ItemList from '../item-list';\nimport ItemDetails from '../item-details';\nimport './app.css';\n\nexport default class App extends React.Component {\n  state = {\n    selectedId: null,\n  }\n\n  onSelected = (id) => {\n    this.setState({ selectedId: id });\n  };\n\n  render() {\n    const { selectedId } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <RandomPlanet />\n        <Row\n          left={<ItemList onSelected={this.onSelected} />}\n          right={selectedId && <ItemDetails selectedId={selectedId} />}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}